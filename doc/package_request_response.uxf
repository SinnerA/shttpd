<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>130</x>
      <y>80</y>
      <w>550</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Pakcage
--
+ConnectionPtr connection()
+void discardConnection()
+std::vector&lt;std::string&gt; getHeaders(std::string h_name)
+std::string* getHeader(std::string h_name)
+void addHeader(const std::string&amp; h_name, const std::string&amp; h_value)
+void setHeader(const std::string h_name, const std::string&amp; h_value)
+void delHeader(const std::string&amp; h_name)
+std::vector&lt;header_t&gt;&amp; headerMap()
+bool keepAlive()
+virtual std::string&amp; version() = 0;
+size_t contentLength()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>370</y>
      <w>320</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Request
--
+std::string&amp; path()
+std::string&amp; query()
+std::string&amp; method()
+std::string&amp; version()
+void flush()
+void basicAuth(const std::string&amp; auth)
+std::string basicAuthInfo()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>280</y>
      <w>160</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>390</y>
      <w>330</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Response
--
+void setMimeType(const std::string&amp; mime)
+std::string&amp; version()
+std::string&amp; message()
+void flush()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>280</y>
      <w>110</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;110.0</additional_attributes>
  </element>
</diagram>
